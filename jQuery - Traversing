----------------------------------------------------------------------------------------------------------------------------
Following table lists down useful methods which you can use to filter out various elements from a list of DOM elements:
-----------------------------------------------------------------------------------------------------------------------------

1=> eq(index) - Reduce the set of matched elements to a single element.

Example: 

<html>
<head>
<title>the title</title>
   <script type="text/javascript" 
   src="/jquery/jquery-1.3.2.min.js"></script>
   <script type="text/javascript" language="javascript">
   
   $(document).ready(function() {
      $("li").eq(0).addClass("selected");
   });

   </script>
   <style>
      .selected { color:red; }
      .highlight { background:yellow; }
  </style>
</head>
<body>
   <div>
   <ul>
     <li>list item 1</li>
     <li>list item 2</li>
     <li>list item 3</li>
     <li>list item 4</li>
     <li>list item 5</li>
     <li>list item 6</li>
   </ul>
   </div>
</body>
</html>

___________________________________________________________________________________________

2 = > filter( selector ) - Removes all elements from the set of matched elements that do not match the specified selector(s).

Example: 

<html>
<head>
<title>the title</title>
   <script type="text/javascript" 
   src="/jquery/jquery-1.3.2.min.js"></script>
   <script type="text/javascript" language="javascript">
   
   $(document).ready(function() {
      $("li").filter(".middle").addClass("selected");
   });

   </script>
   <style>
      .selected { color:red; }
  </style>
</head>
<body>
   <div>
   <ul>
     <li class="top">list item 1</li>
     <li class="top">list item 2</li>
     <li class="middle">list item 3</li>
     <li class="middle">list item 4</li>
     <li class="bottom">list item 5</li>
     <li class="bottom">list item 6</li>
   </ul>
   </div>
</body>
</html>

___________________________________________________________________________________

3=> filter(fn) - Removes all elements from the set of matched elements that do not match the specified function.

Example:  


<html>
<head>
<title>the title</title>
   <script type="text/javascript" 
   src="/jquery/jquery-1.3.2.min.js"></script>
   <script type="text/javascript" language="javascript">
   
   $(document).ready(function() {
      $("li").filter(function (index) {
            return index == 1 || $(this).attr("class") == "middle";
      }).addClass("selected");
   });

   </script>
   <style>
      .selected { color:red; }
  </style>
</head>
<body>
   <div>
   <ul>
     <li class="top">list item 1</li>
     <li class="top">list item 2</li>
     <li class="middle">list item 3</li>
     <li class="middle">list item 4</li>
     <li class="bottom">list item 5</li>
     <li class="bottom">list item 6</li>
   </ul>
   </div>
</body>
</html>

___________________________________________________________________________________

4 => is( selector ) -Checks the current selection against an expression and returns true, if at least one element of the selection fits the given selector.

Example:  

<html>
<head>
<title>the title</title>
   <script type="text/javascript" 
   src="/jquery/jquery-1.3.2.min.js"></script>
   <script type="text/javascript" language="javascript">
   
   $(document).ready(function() {
      
      $("li").click(function () {
         if ($(this).is(":first-child")) {
            $("p").text("This is list item 1");
         } else if ($(this).is(".middle0,.middle1")) {
            $("p").text("This is middle class list");
         } else if ($(this).is(":contains('item 5')")) {
            $("p").text("It's 5th list");
         } 
      });
   });

   </script>
   <style>
      .selected { color:red; }
  </style>
</head>
<body>
   <div>
   <span>Click any list item below:</span>
   <ul>
     <li class="top0">list item 1</li>
     <li class="top1">list item 2</li>
     <li class="middle0">list item 3</li>
     <li class="middle1">list item 4</li>
     <li class="bottom0">list item 5</li>
     <li class="bottom1">list item 6</li>
   </ul>
   <p>FILLER</p>
   </div>
</body>
</html>

___________________________________________________________________________________

5 => map(callback) - Translate a set of elements in the jQuery object into another set of values in a jQuery array(which may, or may not contain elements).

Example: 

<html>
<head>
<title>the title</title>
   <script type="text/javascript" 
   src="/jquery/jquery-1.3.2.min.js"></script>
   <script type="text/javascript" language="javascript">
   
   $(document).ready(function(){
      var mappedItems = $("li").map(function (index) {
      var replacement = $("<li>").text($(this).text()).get(0);
      if (index == 0) {
        // make the first item all caps
        $(replacement).text($(replacement).text().toUpperCase());
      } else if (index == 1 || index == 3) {
        // delete the second and fourth items
        replacement = null;
      } else if (index == 2) {
        // make two of the third item and add some text
        replacement = [replacement,$("<li>").get(0)];
        $(replacement[0]).append("<b> - A</b>");
        $(replacement[1]).append("Extra <b> - B</b>");
      }

      // replacement will be an dom element, null, 
      // or an array of dom elements
      return replacement;
    });
    $("#results").append(mappedItems);

  });
  </script>
  <style>
     body { font-size:16px; }
     ul { float:left; margin:0 30px; color:blue; }
     #results { color:red; }
  </style>
</head>
<body>
  <ul>
    <li>First</li>
    <li>Second</li>
    <li>Third</li>
    <li>Fourth</li>
    <li>Fifth</li>
  </ul>
  <ul id="results">
  </ul>
</body>
</html>

___________________________________________________________________________________

6 => not( selector ) - Removes elements matching the specified selector from the set of matched elements.

Example: 

<html>
<head>
<title>the title</title>
   <script type="text/javascript" 
   src="/jquery/jquery-1.3.2.min.js"></script>
   <script type="text/javascript" language="javascript">
   
   $(document).ready(function() {
      $("li").not(".middle").addClass("selected");
   });

   </script>
   <style>
      .selected { color:red; }
  </style>
</head>
<body>
   <div>
   <ul>
     <li class="top">list item 1</li>
     <li class="top">list item 2</li>
     <li class="middle">list item 3</li>
     <li class="middle">list item 4</li>
     <li class="bottom">list item 5</li>
     <li class="bottom">list item 6</li>
   </ul>
   </div>
</body>
</html>

___________________________________________________________________________________

7 => slice( start, [end] ) - Selects a subset of the matched elements.

Example: 

<html>
<head>
<title>the title</title>
   <script type="text/javascript" 
   src="/jquery/jquery-1.3.2.min.js"></script>
   <script type="text/javascript" language="javascript">
   
   $(document).ready(function() {
      $("li").slice(2, 5).addClass("selected");
   });

   </script>
   <style>
      .selected { color:red; }
  </style>
</head>
<body>
   <div>
   <ul>
     <li class="above">list item 0</li>
     <li class="top">list item 1</li>
     <li class="top">list item 2</li>
     <li class="middle">list item 3</li>
     <li class="middle">list item 4</li>
     <li class="bottom">list item 5</li>
     <li class="bottom">list item 6</li>
     <li class="below">list item 7</li>
   </ul>
   </div>
</body>
</html>

---------------------------------------------------------------------------------------------------------------
      Following table lists down other useful methods which you can use to locate various elements in a DOM:
---------------------------------------------------------------------------------------------------------------

1 => add( selector ) - Adds more elements, matched by the given selector, to the set of matched elements.

Example:

<html>
<head>
<title>the title</title>
   <script type="text/javascript" 
   src="/jquery/jquery-1.3.2.min.js"></script>
   <script type="text/javascript" language="javascript">
   
   $(document).ready(function() {
      $(".top").add(".middle").addClass("selected");
   });

   </script>
   <style>
      .selected { color:red; }
  </style>
</head>
<body>
   <div>
   <ul>
     <li class="above">list item 0</li>
     <li class="top">list item 1</li>
     <li class="top">list item 2</li>
     <li class="middle">list item 3</li>
     <li class="middle">list item 4</li>
     <li class="bottom">list item 5</li>
     <li class="bottom">list item 6</li>
	 <li class="below">list item 7</li>
   </ul>
   </div>
</body>
</html>
___________________________________________________________________________________________________________________

2 => andSelf( ) - Add the previous selection to the current selection.

Example :

<html>
<head>
<title>the title</title>
   <script type="text/javascript" 
   src="/jquery/jquery-1.3.2.min.js"></script>
 <script>
  $(document).ready(function(){

    $("div").find("p").andSelf().addClass("border");

  });
  </script>
  <style>
   p, div { margin:5px; padding:5px; }
  .border { border: 2px solid red; }
  .background { background:yellow; }
  </style>
</head>
<body>
  <div>
    <p>First Paragraph</p>
    <p>Second Paragraph</p>
  </div>
</body>
</html>

___________________________________________________________________________________________________________________

3 => children([selector]) - Get a set of elements containing all of the unique immediate children of each of the matched set of elements.

Example :

<html>
<head>
<title>the title</title>
   <script type="text/javascript" 
   src="/jquery/jquery-1.3.2.min.js"></script>
 <script>
  $(document).ready(function(){

     $("div").children(".selected").addClass("blue");

  });
  </script>
  <style>
  .blue { color:blue; }
  </style>
</head>
<body>
  <div>
    <span>Hello</span>
    <p class="selected">Hello Again</p>
    <div class="selected">And Again</div>
    <p class="biggest">And One Last Time</p>
  </div>
</body>
</html>

___________________________________________________________________________________________________________________

4 => closest( selector ) - Get a set of elements containing the closest parent element that matches the specified selector, the starting element included.

Example :

<html>
<head>
<title>the title</title>
   <script type="text/javascript" 
   src="/jquery/jquery-1.3.2.min.js"></script>
 <script>
  $(document).ready(function(){
    $(document).bind("click", function (e) {
      $(e.target).closest("li").toggleClass("highlight");
    });
  });
  </script>
  <style>
  .highlight { color:red; 
          background: yellow;
        }
  </style>
</head>
<body>
   <div>
   <p>Click any item below to see the result:</p>
   <ul>
     <li class="top">list item 1</li>
     <li class="top">list item 2</li>
     <li class="middle">list item 3</li>
     <li class="middle">list item 4</li>
     <li class="bottom">list item 5</li>
     <li class="bottom">list item 6</li>
   </ul>
   </div>
</body>
</html>

___________________________________________________________________________________________________________________

5 => contents( ) - Find all the child nodes inside the matched elements (including text nodes), or the content document, if the element is an iframe.

Example :

<html>
<head>
<title>the title</title>
   <script type="text/javascript" 
   src="/jquery/jquery-1.3.2.min.js"></script>
<script>
  $(document).ready(function(){
    var $content = $("iframe").contents();
    $content.find("body").append("I'm in an iframe!");
  });
  </script>
  
</head>
<body>
  <iframe src="/jquery/index-blank.htm" width="300" 
             height="100"></iframe>
</body>
</html>
___________________________________________________________________________________________________________________

6 => end( ) - Revert the most recent 'destructive' operation, changing the set of matched elements to its previous state .

Example :

<html>
<head>
<title>the title</title>
   <script type="text/javascript" 
   src="/jquery/jquery-1.3.2.min.js"></script>
   <script>
   $(document).ready(function(){
      $("p").find("span").end().css("border", "5px red solid");
   });
  </script>
  <style>
      p{ 
         margin:10px; 
         padding:10px; 
      }
  </style>
</head>
<body>
  <p><span>Hello</span>, how are you?</p>
</body>
</html>
___________________________________________________________________________________________________________________

7=> find( selector ) - Searches for descendent elements that match the specified selectors.

Example :

<html>
<head>
<title>the title</title>
   <script type="text/javascript" 
   src="/jquery/jquery-1.3.2.min.js"></script>
   <script type="text/javascript" language="javascript">
   
   $(document).ready(function() {
      $("p").find("span").addClass("selected");
   });

   </script>
   <style>
      .selected { color:red; }
  </style>
</head>
<body>
   <div>
      <p><span>Hello</span>, how are you?</p>
      <p>Me? I'm <span>good</span>.</p>
   </div>
</body>
</html>
___________________________________________________________________________________________________________________

8 => next( [selector] ) - Get a set of elements containing the unique next siblings of each of the given set of elements.

Example :

<html>
<head>
<title>the title</title>
   <script type="text/javascript" 
   src="/jquery/jquery-1.3.2.min.js"></script>
   <script type="text/javascript" language="javascript">

     $(document).ready(function(){
       $("p").next(".selected").addClass("hilight");
     });

  </script>
  <style>
      .hilight { background:yellow; }
  </style>

</head>
<body>
  <p>Hello</p>
  <p class="hilight">Hello Again</p>
  <div><span>And Again</span></div>
</body>
</html>
___________________________________________________________________________________________________________________

9 => nextAll( [selector] ) - Find all sibling elements after the current element.

Example :

<html>
<head>
<title>the title</title>
   <script type="text/javascript" 
   src="/jquery/jquery-1.3.2.min.js"></script>
   <script type="text/javascript" language="javascript">

     $(document).ready(function(){
       $("div:first").nextAll().addClass("hilight");
     });

  </script>
  <style>
      .hilight { background:yellow; }
  </style>

</head>
<body>
   <div>first</div>
   <div>sibling<div>child</div></div>
   <div>sibling</div>
   <div>sibling</div>
</body>
</html>
___________________________________________________________________________________________________________________

10 => offsetParent( ) - Returns a jQuery collection with the positioned parent of the first matched element.

Example :

<html>
<head>
<title>the title</title>
   <script type="text/javascript" 
   src="/jquery/jquery-1.3.2.min.js"></script>
   <script type="text/javascript" language="javascript">

     $(document).ready(function(){
          $("p").offsetParent().addClass('hilight');
     });

  </script>
  <style>
      .hilight { background:yellow; }
  </style>

</head>
<body>
      <scan>Top Element</scan>
     <div style="position:relative;">
        <div>sibling<div>child</div></div>
        <p>sibling</p>
        <scan>sibling</scan>
    <div>
</body>
</html>
___________________________________________________________________________________________________________________

11 => parent( [selector] ) - Get the direct parent of an element. If called on a set of elements, parent returns a set of their unique direct parent elements.

Example :

<html>
<head>
<title>the title</title>
   <script type="text/javascript" 
   src="/jquery/jquery-1.3.2.min.js"></script>
   <script type="text/javascript" language="javascript">

     $(document).ready(function(){
          $("p").parent().addClass('hilight');
     });

  </script>
  <style>
      .hilight { background:yellow; }
  </style>

</head>
<body>
     <scan>Top Element</scan>
     <div">
        <div>sibling<div>child</div></div>
        <p>sibling</p>
        <scan>sibling</scan>
    <div>
</body>
</html>
___________________________________________________________________________________________________________________

12 => parents( [selector] ) - Get a set of elements containing the unique ancestors of the matched set of elements (except for the root element).

Example :

<html>
<head>
<title>the title</title>
   <script type="text/javascript" 
   src="/jquery/jquery-1.3.2.min.js"></script>
   <script type="text/javascript" language="javascript">

     $(document).ready(function(){
       var parentEls = $("p").parents()
                             .map(function () { 
                                   return this.tagName; 
                             }).get().join(", ");
        $("b").append("<strong>" + parentEls + "</strong>");
     });

  </script>
  <style>
      .hilight { background:yellow; }
  </style>

</head>
<body>
      <scan>Top Element</scan>
     <div>
        <div class="top">Top division            
            <p class="first">First Sibling</p>
            <scan>Second sibling</scan>
            <p class="third">Third sibling</p>
        </div>
       <b>My parents are: </b>
    <div>
</body>
</html>
___________________________________________________________________________________________________________________

13 => prev( [selector] ) - Get a set of elements containing the unique previous siblings of each of the matched set of elements.

Example :

<html>
<head>
<title>the title</title>
   <script type="text/javascript" 
   src="/jquery/jquery-1.3.2.min.js"></script>
   <script type="text/javascript" language="javascript">

     $(document).ready(function(){
       $("p").prev(".selected").addClass("hilight");
     });

  </script>
  <style>
      .hilight { background:yellow; }
  </style>

</head>
<body>
  <div><span>Hello</span></div>
  <p class="selected">Hello Again</p>
  <p>And Again</p>
</body>
</html>
___________________________________________________________________________________________________________________

14 => prevAll( [selector] ) - Find all sibling elements in front of the current element.

Example :

<html>
<head>
<title>the title</title>
   <script type="text/javascript" 
   src="/jquery/jquery-1.3.2.min.js"></script>
   <script type="text/javascript" language="javascript">

     $(document).ready(function(){
       $("div:last").prevAll().addClass("hilight");
     });

  </script>
  <style>
      .hilight { background:yellow; }
  </style>

</head>
<body>
   <div>first</div>
   <div>sibling<div>child</div></div>
   <div>sibling</div>
   <div>sibling</div>
</body>
</html>
___________________________________________________________________________________________________________________

15 => siblings( [selector] ) - Get a set of elements containing all of the unique siblings of each of the matched set of elements.

Example :

<html>
<head>
<title>the title</title>
   <script type="text/javascript" 
   src="/jquery/jquery-1.3.2.min.js"></script>
   <script type="text/javascript" language="javascript">

     $(document).ready(function(){
       $("p").siblings('.selected').addClass("hilight");
     });

  </script>
  <style>
      .hilight { background:yellow; }
  </style>

</head>
<body>
  <div><span>Hello</span></div>
  <p class="selected">Hello Again</p>
  <p>And Again</p>
</body>
</html>

